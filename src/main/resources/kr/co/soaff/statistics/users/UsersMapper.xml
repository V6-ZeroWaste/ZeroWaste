<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.soaff.statistics.users.UsersMapper">

    <sql id="orderBySql">
        <choose>
            <when test="orderBy == '최근순'">
                ORDER BY dr.date DESC
            </when>
            <when test="orderBy == '오래된순'">
                ORDER BY dr.date ASC
            </when>
            
            <otherwise>
                ORDER BY dr.date DESC
            </otherwise>
        </choose>
    </sql>
    
    <sql id="searchSql">
        <if test="filter == '일별'">
            <if test="start_date != null and start_date != '' and end_date != null and end_date != ''">
                AND DATE(dr.date) BETWEEN #{start_date} AND #{end_date}
            </if>
            <if test="start_date != null and start_date != '' and (end_date == null or end_date == '')">
                AND DATE(dr.date) BETWEEN #{start_date} AND NOW()
            </if>
            <if test="end_date != null and end_date != '' and (start_date == null or start_date == '')">
                <![CDATA[
                AND DATE(dr.date) <= #{end_date}
                ]]>
            </if>
        </if>
        <if test="filter == '주별'">
            <if test="start_date != null and start_date != '' and end_date != null and end_date != ''">
                AND dr.date BETWEEN 
                    DATE_ADD(STR_TO_DATE(CONCAT(LEFT(#{start_date}, 4), '-01-01'), '%Y-%m-%d'), INTERVAL (RIGHT(#{start_date}, 2) - 1) WEEK)
                    AND DATE_ADD(STR_TO_DATE(CONCAT(LEFT(#{end_date}, 4), '-01-01'), '%Y-%m-%d'), INTERVAL (RIGHT(#{end_date}, 2) - 1) WEEK)
            </if>
            <if test="start_date != null and start_date != '' and (end_date == null or end_date == '')">
                <![CDATA[
                AND dr.date >= 
                    DATE_ADD(STR_TO_DATE(CONCAT(LEFT(#{start_date}, 4), '-01-01'), '%Y-%m-%d'), INTERVAL (RIGHT(#{start_date}, 2) - 1) WEEK)
                ]]>
            </if>
            <if test="end_date != null and end_date != '' and (start_date == null or start_date == '')">
                <![CDATA[
                AND dr.date <= 
                    DATE_ADD(STR_TO_DATE(CONCAT(LEFT(#{end_date}, 4), '-01-01'), '%Y-%m-%d'), INTERVAL (RIGHT(#{end_date}, 2)) WEEK)
                ]]>
            </if>
        </if>
        <if test="filter == '월별'">
            <if test="start_date != null and start_date != '' and end_date != null and end_date != ''">
                AND DATE_FORMAT(dr.date, '%Y-%m') BETWEEN #{start_date} AND #{end_date}
            </if>
            <if test="start_date != null and start_date != '' and (end_date == null or end_date == '')">
                <![CDATA[
                AND DATE_FORMAT(dr.date, '%Y-%m') >= #{start_date}
                ]]>
            </if>
            <if test="end_date != null and end_date != '' and (start_date == null or start_date == '')">
                <![CDATA[
                AND DATE_FORMAT(dr.date, '%Y-%m') <= #{end_date}
                ]]>
            </if>
        </if>
    </sql>
	
	
	
	<!-- 탈퇴한 회원수 -->
    <select id="leave_list" parameterType="kr.co.soaff.statistics.users.UsersVO" resultType="kr.co.soaff.statistics.users.UsersVO">
       <choose>
            <when test="filter == '주별'">
			    WITH RECURSIVE date_range AS (
			        SELECT DATE_FORMAT(CONCAT(LEFT(#{start_date}, 4), '-01-01'), '%Y-%m-%d') AS date
			        UNION ALL
			        SELECT DATE_ADD(date, INTERVAL 1 WEEK)
			        FROM date_range
			        <![CDATA[
			        WHERE DATE_ADD(date, INTERVAL 1 WEEK) < #{end_date}
			        ]]>
			    )
			</when>
            <when test="filter == '월별'">
			    WITH RECURSIVE date_range AS (
			        SELECT CONCAT(LEFT(#{start_date}, 7), '-01') AS date
			        UNION ALL
			        SELECT DATE_ADD(date, INTERVAL 1 MONTH)
			        FROM date_range
			        <![CDATA[
			        WHERE DATE_ADD(date, INTERVAL 1 MONTH) <= DATE_ADD(CONCAT(LEFT(#{end_date}, 7), '-01'), INTERVAL 1 MONTH)
			        ]]>
			    )
			</when>
            <otherwise>
                WITH RECURSIVE date_range AS (
                    SELECT #{start_date} AS date
                    UNION ALL
                    SELECT DATE_ADD(date, INTERVAL 1 DAY)
                    FROM date_range
                    <![CDATA[
                    WHERE DATE_ADD(date, INTERVAL 1 DAY) <= #{end_date}
                    ]]>
                )
            </otherwise>
        </choose>
        SELECT 
            dr.date as date,
            (CASE WHEN leave_cnt is null then 0 else leave_cnt end) as leave_cnt
        FROM date_range dr
            LEFT JOIN (
		            SELECT COUNT(*) AS leave_cnt,  
		            date
		        FROM user
		        WHERE `delete` is not null
		        GROUP BY date
		    ) user_status 
        ON
            <choose>
                <when test="filter == '일별'">
                    DATE(user_status.date) = dr.date
                </when>
                <when test="filter == '주별'">
                    DATE_FORMAT(user_status.date, '%Y-%u') = DATE_FORMAT(dr.date, '%Y-%u')
                </when>
                <when test="filter == '월별'">
                    DATE_FORMAT(user_status.date, '%Y-%m') = DATE_FORMAT(dr.date, '%Y-%m')
                </when>
                <otherwise>
                    DATE(user_status.date) = dr.date
                </otherwise>
            </choose>
        <where>
            <include refid="searchSql"/>
        </where>
        <include refid="orderBySql"/>
        LIMIT #{startIdx}, 20;
    </select>
	<!-- 회원수 -->
    <select id="users_list" parameterType="kr.co.soaff.statistics.users.UsersVO" resultType="kr.co.soaff.statistics.users.UsersVO">
       <choose>
            <when test="filter == '주별'">
			    WITH RECURSIVE date_range AS (
			        SELECT DATE_FORMAT(CONCAT(LEFT(#{start_date}, 4), '-01-01'), '%Y-%m-%d') AS date
			        UNION ALL
			        SELECT DATE_ADD(date, INTERVAL 1 WEEK)
			        FROM date_range
			        <![CDATA[
			        WHERE DATE_ADD(date, INTERVAL 1 WEEK) < #{end_date}
			        ]]>
			    )
			</when>
            <when test="filter == '월별'">
			    WITH RECURSIVE date_range AS (
			        SELECT CONCAT(LEFT(#{start_date}, 7), '-01') AS date
			        UNION ALL
			        SELECT DATE_ADD(date, INTERVAL 1 MONTH)
			        FROM date_range
			        <![CDATA[
			        WHERE DATE_ADD(date, INTERVAL 1 MONTH) <= DATE_ADD(CONCAT(LEFT(#{end_date}, 7), '-01'), INTERVAL 1 MONTH)
			        ]]>
			    )
			</when>
            <otherwise>
                WITH RECURSIVE date_range AS (
                    SELECT #{start_date} AS date
                    UNION ALL
                    SELECT DATE_ADD(date, INTERVAL 1 DAY)
                    FROM date_range
                    <![CDATA[
                    WHERE DATE_ADD(date, INTERVAL 1 DAY) <= #{end_date}
                    ]]>
                )
            </otherwise>
        </choose>
        SELECT 
            dr.date as date,
            (SELECT COUNT(*) 
		     FROM user
		     <![CDATA[
		     WHERE date <= dr.date AND (`delete` IS NULL OR `delete` > dr.date)) AS user_cnt
   			]]>
       	FROM date_range dr
       	<where>
            <include refid="searchSql"/>
        </where>
        GROUP BY dr.date
        <include refid="orderBySql"/>
        LIMIT #{startIdx}, 20;
    </select>
    
    <!-- list 총 개수 -->
    <select id="count" parameterType="kr.co.soaff.statistics.users.UsersVO" resultType="int">
       <choose>
            <when test="filter == '주별'">
			    WITH RECURSIVE date_range AS (
			        SELECT DATE_FORMAT(CONCAT(LEFT(#{start_date}, 4), '-01-01'), '%Y-%m-%d') AS date
			        UNION ALL
			        SELECT DATE_ADD(date, INTERVAL 1 WEEK)
			        FROM date_range
			        <![CDATA[
			        WHERE DATE_ADD(date, INTERVAL 1 WEEK) < #{end_date}
			        ]]>
			    )
			</when>
            <when test="filter == '월별'">
			    WITH RECURSIVE date_range AS (
			        SELECT CONCAT(LEFT(#{start_date}, 7), '-01') AS date
			        UNION ALL
			        SELECT DATE_ADD(date, INTERVAL 1 MONTH)
			        FROM date_range
			        <![CDATA[
			        WHERE DATE_ADD(date, INTERVAL 1 MONTH) <= DATE_ADD(CONCAT(LEFT(#{end_date}, 7), '-01'), INTERVAL 1 MONTH)
			        ]]>
			    )
			</when>
            <otherwise>
                WITH RECURSIVE date_range AS (
                    SELECT #{start_date} AS date
                    UNION ALL
                    SELECT DATE_ADD(date, INTERVAL 1 DAY)
                    FROM date_range
                    <![CDATA[
                    WHERE DATE_ADD(date, INTERVAL 1 DAY) <= #{end_date}
                    ]]>
                    
                )
            </otherwise>
        </choose>
        SELECT  COUNT(*)
	    FROM (
	        SELECT 
	            dr.date as date
	        FROM date_range dr
	        <where>
	            <include refid="searchSql"/>
	        </where>
	        GROUP BY date
	    ) AS grouped_dates;
	</select>
    
</mapper>