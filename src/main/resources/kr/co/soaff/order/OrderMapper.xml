<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.soaff.order.OrderMapper">
	
	<sql id="searchSql">
		<where>
			user_no = #{user_no}
			<if test="start_date != null and start_date != ''">
				AND `order`.payment_date >= #{start_date}
			</if>
			<if test="end_date != null and end_date != ''">
				AND #{end_date} >= `order`.payment_date
			</if>
			<if test="filter != null and filter != ''">
				<choose>
					<when test="filter=='상품준비중'">
						AND order_status = 0
					</when>
					<when test="filter=='배송중'">
						AND order_status = 1
					</when>
					<when test="filter=='배송완료'">
						AND order_status = 2
					</when>
 					<when test="filter=='구매확정'">
 						AND confirm_date is not null
					</when>
					<when test="filter=='취소요청/완료'">
						AND cancel_status IS NOT NULL
					</when>
				</choose>
			</if>
		</where>
	</sql>
	
	<!-- 마이페이지>주문 -->
	<select id="list" parameterType="kr.co.soaff.order.OrderVO" resultType="kr.co.soaff.order.OrderVO">
		SELECT 
			od.order_no, payment_date, total_item_price,
			cancel_status,total_amount,
			if(od.confirm_date is null,delivery_status, 3) as order_status,
			IF(item_amount > 1, CONCAT(item.name ,' 외 ',item_amount - 1,'개'), item.name ) AS order_name,
		    item_amount, cancel_count, item_img
		FROM (
			SELECT 
				order_no, MIN(item_no) AS item_no, SUM((price+if(packing_status=0, 0, 2000)) * amount) AS total_item_price, max(confirm_date) as confirm_date,
				SUM(amount) AS total_amount, MIN(cancel_status) AS cancel_status, COUNT(*) AS item_amount, COUNT(cancel_status) as cancel_count
			FROM order_detail
			GROUP BY order_no
		    ) od
		JOIN item
		ON item.item_no = od.item_no
		JOIN `order`
		ON `order`.order_no = od.order_no
		<include refid="searchSql"/>
		ORDER BY payment_date DESC
	</select>
	
	<!-- 마이페이지>주문 (총 개수) -->
	<select id="count" parameterType="kr.co.soaff.order.OrderVO" resultType="int">
		SELECT COUNT(DISTINCT(`order`.order_no))
		FROM (
			SELECT 
				order_no, MIN(item_no) AS item_no, SUM(price) AS total_item_price, max(confirm_date) as confirm_date,
				SUM(amount) AS total_amount, MIN(cancel_status) AS cancel_status, COUNT(*) AS item_amount
			FROM order_detail
			GROUP BY order_no
		    ) od
		JOIN item
		ON item.item_no = od.item_no
		JOIN `order`
		ON `order`.order_no = od.order_no
		<include refid="searchSql"/>
		ORDER BY payment_date DESC
		LIMIT #{startIdx}, 10
	</select>
	
	<!-- 마이페이지>주문>상세> (주문 정보) -->
	<!-- OrderVO에 담는 정보 -->
	<select id="orderInfo" parameterType="kr.co.soaff.order.OrderVO">
		SELECT
			order_no, delivery_status,
		    payment_method, payment_date,  point, payment_price, delivery_price, refund_price,
		    receiver_name, receiver_tel, zipcode, addr, addr_detail, delivery_request,
		    (select count(*) - count(cancel_status) from order_detail where order_no = #{order_no} ) as cancel_count,
		    (select max(if(cancel_status is null,current_timestamp(), cancel_request_date)) from order_detail where order_no = #{order_no}) as last_cancel_date
		FROM `order`
		WHERE order_no = #{order_no} and `order`.user_no = #{user_no};
	</select>
	<!-- 마이페이지>주문>상세> (주문 상세 정보) -->
	<!-- List<OrderDetailVO>에 담는 정보 -->
	<select id="orderDetailList" parameterType="kr.co.soaff.order.OrderDetailVO">
		SELECT 
			order_detail_no,
		    od.amount, od.price, od.packing_status,
		    cancel_status, confirm_date,
		    od.item_no, item_img, item.name as item_name,
		    (select review_no from review where order_detail_no = od.order_detail_no and user_no = od.user_no) as review_no
		FROM order_detail AS od
			JOIN item
		    ON item.item_no = od.item_no
		WHERE order_no = #{order_no} and od.user_no = #{user_no}
	</select>
	<!-- OrderDetailVO에 담는 정보 -->
	<select id="orderDetailInfo" parameterType="kr.co.soaff.order.OrderDetailVO">
		SELECT
			order_no, order_detail_no, packing_status,
		    od.amount, od.price,
		    cancel_status, confirm_date, cancel_reason_detail, cancel_reason_type,cancel_request_date,
		    od.item_no, item_img, item.name as item_name
		FROM order_detail AS od
			JOIN item
		    ON item.item_no = od.item_no
		WHERE order_detail_no = #{order_detail_no} and od.user_no = #{user_no} 
	</select>
	<!-- 구매확정 update -->
	<update id="orderConfirm" parameterType="kr.co.soaff.order.OrderDetailVO">
		UPDATE order_detail SET
						confirm_date = current_timestamp()
		WHERE order_detail_no = #{order_detail_no} and user_no = #{user_no}
	</update>
	
	<!-- 봉욱 주문페이지에서 사용하는 쿼리-->
	<!-- start -->
	<!-- Order, delivery Info에 들어갈 정보 (list) -->
	<select id="info" parameterType="kr.co.soaff.order.OrderVO" resultType="kr.co.soaff.order.OrderVO">
		SELECT tel as buyer_tel,
	   		   email as buyer_email, 
      	   	   zipcode,
               addr, addr_detail
		FROM user
		WHERE user_no=#{user_no}
	</select>
	
	<!-- 잔여 적립금 조회(point)-->
	<select id="point" parameterType="kr.co.soaff.order.OrderVO" resultType="int">
		SELECT ifnull(sum(point),0) as point FROM point WHERE user_no=#{user_no}
	</select>
	
	<!-- 카트 정보 조회 -->
	<!-- cart list -->
	<select id="cartList" parameterType="kr.co.soaff.order.OrderVO" resultType="kr.co.soaff.cart.CartVO">
		SELECT c.cart_no, c.user_no, c.amount, c.packing_status,
		c.item_no, i.name, i.price, i.discounted_price,
		i.item_img, i.amount as inventory
		FROM cart c
		JOIN item i ON c.item_no = i.item_no
		WHERE c.user_no = #{user_no}
		AND c.cart_no IN
		<foreach item="cartNo" collection="checkedCartNo" open="(" separator="," close=")">
			#{cartNo}
		</foreach>
		ORDER BY c.cart_no;
	</select>

	
		
	<!-- cart count -->
	<select id="cartCount" parameterType="kr.co.soaff.order.OrderVO" resultType="int">
		SELECT count(*)
		FROM cart
		WHERE user_no = #{user_no}
		AND cart_no IN
		<foreach item="cartNo" collection="checkedCartNo" open="(" separator="," close=")">
			#{cartNo}
		</foreach>
	</select>
	
	<!-- updateDB -->
	<!-- order부분 -->
	<insert id="orderInsert" parameterType="kr.co.soaff.order.OrderVO">		
		INSERT INTO `order`(
			user_no, payment_date, payment_price, payment_method,
			payment_id, point, order_status, 
			order_name, receiver_name, zipcode, addr, 
			addr_detail, receiver_tel, delivery_request, delivery_price, 
			buyer_name, buyer_email, buyer_tel, delivery_status
			) VALUES (
				#{user_no}, NOW(), #{payment_price}, #{payment_method}, 
				#{payment_id}, #{point}, #{order_status}, 
				#{order_name}, #{receiver_name}, #{zipcode}, #{addr}, 
				#{addr_detail}, #{receiver_tel}, #{delivery_request}, #{delivery_price},
				#{buyer_name}, #{buyer_email}, #{buyer_tel}, #{delivery_status}
			)
		
		<selectKey keyProperty="order_no" order="AFTER" resultType="int">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<!-- order detail 부분 -->
	<insert id="orderDetailInsert" parameterType="java.util.List">
	    INSERT INTO `order_detail` (order_no, user_no, amount, price, item_no, packing_status)
	    VALUES
	    <foreach collection="list" item="orderDetail" separator=",">
	        (
	            #{orderDetail.order_no}, #{orderDetail.user_no}, #{orderDetail.amount},
	            #{orderDetail.price}, #{orderDetail.item_no}, #{orderDetail.packing_status}
	        )
	    </foreach>
	</insert>
	
	<!-- 상품재고 업데이트 -->

	<update id="inventoryUpdate" parameterType="kr.co.soaff.order.OrderVO">
	        UPDATE item
	        SET amount = (amount - #{amount})
	        WHERE item_no = #{item_no}

	</update>

	<insert id="pointPlus" parameterType="kr.co.soaff.order.OrderVO">
		INSERT INTO `point`(
				user_no, content, point, 
				point_date, order_no
			) VALUES (
				#{user_no},#{pointPlusContent},#{pointPlus},
				NOW(),#{order_no}
		
			)
	
	</insert>
	
	<insert id="pointMinus" parameterType="kr.co.soaff.order.OrderVO">
		INSERT INTO `point`(
				user_no, content, point, 
				point_date, order_no
			) VALUES (
				#{user_no},#{pointContent},#{point},
				NOW(),#{order_no}
		
			)
	
	</insert>
	
	<!-- 항목 삭제 -->
	<delete id="deleteCartAfterOrder" parameterType="kr.co.soaff.order.OrderVO">
	    DELETE FROM cart
		WHERE user_no = #{user_no}
		AND cart_no IN
		<foreach item="cartNo" collection="checkedCartNo" open="(" separator="," close=")">
			#{cartNo}
		</foreach>
	</delete>
	

	<!-- 재고확인 -->

    <select id="checkAmount" parameterType="java.util.List" resultType="java.lang.Integer">
        SELECT amount
        FROM item
        WHERE item_no IN 
        <foreach item="vo" collection="list" open="(" separator="," close=")">
            #{vo.item_no}
        </foreach>
    </select>
	
	
	<!-- end -->
	
</mapper>