<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.soaff.review.ReviewMapper">
	<sql id="orderBySql">
		<if test="orderBy == null or orderBy == '최신순'">
			ORDER BY review.regist_date DESC
		</if>
	</sql>
	<sql id="calendar">
		<where>
			<if test="startDate != null and (startDate != '')">
                <![CDATA[
                AND review.regist_date >= #{startDate}
                ]]>
			</if>
			<if test="endDate != null and (endDate != '')">
                <![CDATA[
                AND review.regist_date < DATE_ADD(STR_TO_DATE(#{endDate}, '%Y-%m-%d'), INTERVAL 1 DAY)
                ]]>
			</if>
		</where>
	</sql>

	<!-- 리뷰 목록 조회 -->
	<select id="list" parameterType="kr.co.soaff.review.ReviewVO"
		resultType="kr.co.soaff.review.ReviewVO">
		SELECT
		review.review_no,
		review.review_img,
		item.name as item_name,
		item.item_img as item_img,
		review.title,
		user.id as user_id,
		review.regist_date,
		review.score
		FROM
		review
		JOIN item ON review.item_no =
		item.item_no
		JOIN user ON
		review.user_no = user.user_no
		<include refid="calendar" />
		<include refid="orderBySql" />
		LIMIT #{startIdx}, 10
	</select>


	<!-- 리뷰 개수 조회 -->
	<select id="count" parameterType="kr.co.soaff.review.ReviewVO"
		resultType="int">
		SELECT count(*)
		FROM
		review
		JOIN item ON review.item_no = item.item_no
		JOIN user ON review.user_no = user.user_no
		<include refid="calendar" />
	</select>

	<insert id="post" parameterType="kr.co.soaff.review.ReviewVO">
		INSERT INTO review (
		user_no,
		user_id,
		score,
		title,
		content,
		review_img,
		regist_date,
		exposed_status,
		order_detail_no,
		item_no,
		order_no,
		item_img
		)
		VALUES (
		#{user_no},
		#{user_id},
		#{score},
		#{title},
		#{content},
		#{review_img},
		CURRENT_TIMESTAMP,
		#{exposed_status},
		#{order_detail_no},
		#{item_no},
		#{order_no},
		#{item_img}
		)
	</insert>

	<select id="write" parameterType="kr.co.soaff.review.ReviewVO"
		resultType="kr.co.soaff.review.ReviewVO">
		SELECT
		i.item_no AS
		item_no,
		i.name AS item_name,
		i.item_img AS
		item_img,
		#{order_detail_no}
		AS order_detail_no,
		od.order_no AS order_no,
		1 AS exposed_status
		FROM
		item i
		JOIN order_detail od ON i.item_no =
		od.item_no
		JOIN user u ON
		u.user_no = #{user_no}
		WHERE i.item_no =
		#{item_no} AND
		od.order_detail_no = #{order_detail_no}
	</select>



	<select id="getItemName" parameterType="int" resultType="String">
		SELECT
		COUNT(*)
		FROM item WHERE item_no = #{item_no}
	</select>

	<!-- 리뷰 상세 조회 -->
	<select id="detail" parameterType="kr.co.soaff.review.ReviewVO"
		resultType="kr.co.soaff.review.ReviewVO">
		SELECT
		review.review_no,
		review.review_img,
		review.title,
		review.content,
		review.score,
		review.regist_date,
		item.name as item_name,
		item.item_img as item_img,
		user.id as user_id
		FROM
		review JOIN item ON
		review.item_no =
		item.item_no
		JOIN
		user ON review.user_no = user.user_no
		WHERE
		review.review_no =
		#{review_no}
	</select>

	<!-- 리뷰 삭제 -->
	<delete id="delete" parameterType="int">
		DELETE FROM review
		WHERE
		review_no = #{review_no};
	</delete>

	<update id="update" parameterType="kr.co.soaff.review.ReviewVO">
		UPDATE review
		SET
		title =
		#{title},
		content = #{content},
		review_img = #{review_img}
		WHERE
		review_no = #{review_no};
	</update>



</mapper>
